name: Deploy (sub)

on: 
  workflow_call:
    inputs:
      environment:
        description: 'Environment to run apply against'
        required: true
        type: string
      timeout_seconds:
        description: 'Kubectl apply wait timeout in seconds for Deployments'
        required: true
        type: number
      force_restart:
        description: 'Force Deployment Rollout Restart'
        required: true
        default: false
        type: boolean
      helm_force_upgrade_microservices_csv:
        description: 'Comma-separated microservices names to apply --force'
        required: false
        default: ''
        type: string
      helm_force_upgrade_cronjob_csv:
        description: 'Comma-separated cronjob names to apply --force'
        required: false
        default: ''
        type: string

  
defaults:
  run:
    shell: bash

env:
  SCRIPTS_FOLDER: "./interop-infra-commons/scripts/helm"

jobs:  
  workflow_setup:
    name: Setup steps
    runs-on: [ self-hosted, "run_id:${{ inputs.environment }}-${{ github.run_id }}" ]
    environment: ${{ inputs.environment }}
    env:
      TARGET_ENVIRONMENT: ${{ inputs.environment }}
    outputs:
      microservices: ${{ steps.set-outputs.outputs.microservices }}
      cronjobs: ${{ steps.set-outputs.outputs.cronjobs }}
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29
      - id: set-outputs
        run: |
          echo "microservices=$(find microservices -type f -path "*/$TARGET_ENVIRONMENT/values.yaml" -exec dirname {} \; | awk -F'/' '{print $2}' | jq -R -s -c 'split("\n")[:-1]')" >> "$GITHUB_OUTPUT"
          echo "cronjobs=$(find jobs -type f -path "*/$TARGET_ENVIRONMENT/values.yaml" -exec dirname {} \; | awk -F'/' '{print $2}' | jq -R -s -c 'split("\n")[:-1]')" >> "$GITHUB_OUTPUT"
  

  deploy_common_configmaps:
    name: Deploy Common Configmaps
    needs: [ workflow_setup ]
    runs-on: [ self-hosted, "run_id:${{ inputs.environment }}-${{ github.run_id }}" ]
    environment: ${{ inputs.environment }}
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29
      - name: Update Kubeconfig
        id: update_kubeconfig
        run: |
          set -euo pipefail

          aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name ${{ secrets.EKS_CLUSTER_NAME }}
      - name: Apply commons configmaps
        id: apply_commons_configmap
        env:
          ENVIRONMENT: ${{ inputs.environment }}
        run: |
          set -euo pipefail
          
          commons_configmaps_path="commons/$ENVIRONMENT/configmaps"
          
          if [[ -n "$(ls -A $commons_configmaps_path)" ]]; then
            for f in $commons_configmaps_path/*; do
              kubectl apply -f $f
            done;
          fi

  deploy_ms:
    name: ${{ matrix.microservice }}
    runs-on: [ self-hosted, "run_id:${{ inputs.environment }}-${{ github.run_id }}" ]
    environment: ${{ inputs.environment }}
    needs: [workflow_setup, deploy_common_configmaps]
    if: ${{ ! contains(needs.workflow_setup.outputs.microservices, '[]') }}
    strategy:
      matrix:
        microservice: ${{ fromJson(needs.workflow_setup.outputs.microservices) }}
      fail-fast: false
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29

      - name: Check Kubectl Enabled
        id: check-kubectl-enabled
        run: |
          use_kubectl_diff=false
          use_kubectl_apply=false

          if [[ "${{ inputs.environment }}" == "vapt" ]]; then
            use_kubectl_diff=true
            use_kubectl_apply=true
          fi
          echo "use_kubectl_diff=$use_kubectl_diff" >> $GITHUB_OUTPUT
          echo "use_kubectl_apply=$use_kubectl_apply" >> $GITHUB_OUTPUT

      - name: Deploy Microservice
        uses: pagopa/interop-infra-commons/github/actions/deploy@${{ vars.INFRA_COMMONS_ACTIONS_DEPLOY_TAG }} # Aggiungere var?
        with:
          environment: ${{ inputs.environment }}
          timeout_seconds: ${{ inputs.timeout_seconds }}
          force_restart: ${{ inputs.force_restart }}
          kind: "microservice"
          target: "${{ matrix.microservice }}"
          infra_commons_tag: ${{ vars.INFRA_COMMONS_TAG }}
          helm_force_upgrade: ${{ inputs.helm_force_upgrade_microservices_csv == '*' || contains(inputs.helm_force_upgrade_microservices_csv, matrix.microservice) }}
          use_kubectl_diff: ${{ steps.check-kubectl-enabled.outputs.use_kubectl_diff }}
          use_kubectl_apply: ${{ steps.check-kubectl-enabled.outputs.use_kubectl_apply }}
      
  deploy_cj:
    name: ${{ matrix.cronjob }}
    runs-on: [ self-hosted, "run_id:${{ inputs.environment }}-${{ github.run_id }}" ]
    environment: ${{ inputs.environment }}
    needs: [workflow_setup, deploy_common_configmaps]
    if: ${{ ! contains(needs.workflow_setup.outputs.cronjobs, '[]') }}
    strategy:
      matrix:
        cronjob: ${{ fromJson(needs.workflow_setup.outputs.cronjobs) }}
      fail-fast: false
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29
      
      - name: Check Kubectl Enabled
        id: check-kubectl-enabled
        run: |
          use_kubectl_diff=false
          use_kubectl_apply=false

          if [[ "${{ inputs.environment }}" == "vapt" ]]; then
            use_kubectl_diff=true
            use_kubectl_apply=true
          fi
          echo "use_kubectl_diff=$use_kubectl_diff" >> $GITHUB_OUTPUT
          echo "use_kubectl_apply=$use_kubectl_apply" >> $GITHUB_OUTPUT
      
      - name: Deploy Cronjob
        uses: pagopa/interop-infra-commons/github/actions/deploy@${{ vars.INFRA_COMMONS_ACTIONS_DEPLOY_TAG }} # Aggiungere var?
        with:
          environment: ${{ inputs.environment }}
          timeout_seconds: ${{ inputs.timeout_seconds }}
          force_restart: ${{ inputs.force_restart }}
          kind: "cronjob"
          target: "${{ matrix.cronjob }}"
          infra_commons_tag: ${{ vars.INFRA_COMMONS_TAG }}
          helm_force_upgrade: ${{ inputs.helm_force_upgrade_cronjob_csv == '*' || contains(inputs.helm_force_upgrade_cronjob_csv, matrix.cronjob) }}
          use_kubectl_diff: ${{ steps.check-kubectl-enabled.outputs.use_kubectl_diff }}
          use_kubectl_apply: ${{ steps.check-kubectl-enabled.outputs.use_kubectl_apply }}
        
