name: interop-be-events-signer
techStack: nodejs

serviceAccount:
  roleArn: "arn:aws:iam::{{.Values.local.awsAccountId}}:role/interop-be-events-signer-{{.Values.local.env}}-es1"

service:
  create: false

configmap:
  SERVICE_NAME: "events-signer"
  KAFKA_GROUP_ID: "{{.Values.local.env}}-events-signer"
  AVERAGE_KAFKA_MESSAGE_SIZE_IN_BYTES: "5000"
  MESSAGES_TO_READ_PER_BATCH: "500"
  MAX_WAIT_KAFKA_BATCH_MILLIS: "5000"
  TOPIC_STARTING_OFFSET: "earliest"
  SAFE_STORAGE_CLIENT_ID: "interop-{{.Values.namespace}}-events-signer"
  S3_BUCKET: "interop-domain-events-{{.Values.local.env}}-es1"

deployment:
  envFromConfigmaps:
    AGREEMENT_TOPIC: "common-kafka.AGREEMENT_TOPIC"
    AUTHORIZATION_TOPIC: "common-kafka.AUTHORIZATION_TOPIC"
    CATALOG_TOPIC: "common-kafka.CATALOG_TOPIC"
    DELEGATION_TOPIC: "common-kafka.DELEGATION_TOPIC"
    PURPOSE_TOPIC: "common-kafka.PURPOSE_TOPIC"
    KAFKA_BROKERS: "common-kafka.KAFKA_BROKERS"
    SAFE_STORAGE_BASE_URL: "common-safe-storage.BASE_URL"
    SAFE_STORAGE_DOC_TYPE: "common-safe-storage.DOC_TYPE"
    SAFE_STORAGE_DOC_STATUS: "common-safe-storage.DOC_STATUS"
    SIGNATURE_REFERENCES_TABLE_NAME: "common-safe-storage.LIVE_REQUESTS_DYNAMO_TABLE_NAME"

  envFromSecrets:   
    SAFE_STORAGE_API_KEY: "safe-storage-signing-credentials.password"
    
  envFromFieldRef:
    AWS_ROLE_SESSION_NAME: "metadata.name"
    KAFKA_CLIENT_ID: "metadata.name"
